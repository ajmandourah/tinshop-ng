// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ajmandourah/tinshop-ng/repository (interfaces: Stats)

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	reflect "reflect"

	repository "github.com/ajmandourah/tinshop-ng/repository"
	gomock "github.com/golang/mock/gomock"
)

// MockStats is a mock of Stats interface.
type MockStats struct {
	ctrl     *gomock.Controller
	recorder *MockStatsMockRecorder
}

// MockStatsMockRecorder is the mock recorder for MockStats.
type MockStatsMockRecorder struct {
	mock *MockStats
}

// NewMockStats creates a new mock instance.
func NewMockStats(ctrl *gomock.Controller) *MockStats {
	mock := &MockStats{ctrl: ctrl}
	mock.recorder = &MockStatsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStats) EXPECT() *MockStatsMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockStats) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockStatsMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockStats)(nil).Close))
}

// DownloadAsked mocks base method.
func (m *MockStats) DownloadAsked(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DownloadAsked", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DownloadAsked indicates an expected call of DownloadAsked.
func (mr *MockStatsMockRecorder) DownloadAsked(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DownloadAsked", reflect.TypeOf((*MockStats)(nil).DownloadAsked), arg0, arg1)
}

// ListVisit mocks base method.
func (m *MockStats) ListVisit(arg0 *repository.Switch) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListVisit", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListVisit indicates an expected call of ListVisit.
func (mr *MockStatsMockRecorder) ListVisit(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListVisit", reflect.TypeOf((*MockStats)(nil).ListVisit), arg0)
}

// Load mocks base method.
func (m *MockStats) Load() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Load")
}

// Load indicates an expected call of Load.
func (mr *MockStatsMockRecorder) Load() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Load", reflect.TypeOf((*MockStats)(nil).Load))
}

// Summary mocks base method.
func (m *MockStats) Summary() (repository.StatsSummary, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Summary")
	ret0, _ := ret[0].(repository.StatsSummary)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Summary indicates an expected call of Summary.
func (mr *MockStatsMockRecorder) Summary() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Summary", reflect.TypeOf((*MockStats)(nil).Summary))
}
