// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ajmandourah/tinshop/repository (interfaces: API)

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	http "net/http"
	reflect "reflect"

	repository "github.com/ajmandourah/tinshop/repository"
	gomock "github.com/golang/mock/gomock"
)

// MockAPI is a mock of API interface.
type MockAPI struct {
	ctrl     *gomock.Controller
	recorder *MockAPIMockRecorder
}

// MockAPIMockRecorder is the mock recorder for MockAPI.
type MockAPIMockRecorder struct {
	mock *MockAPI
}

// NewMockAPI creates a new mock instance.
func NewMockAPI(ctrl *gomock.Controller) *MockAPI {
	mock := &MockAPI{ctrl: ctrl}
	mock.recorder = &MockAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAPI) EXPECT() *MockAPIMockRecorder {
	return m.recorder
}

// Stats mocks base method.
func (m *MockAPI) Stats(arg0 http.ResponseWriter, arg1 repository.StatsSummary) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Stats", arg0, arg1)
}

// Stats indicates an expected call of Stats.
func (mr *MockAPIMockRecorder) Stats(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Stats", reflect.TypeOf((*MockAPI)(nil).Stats), arg0, arg1)
}
